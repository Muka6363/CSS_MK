/* (ENİÇ)         
content;   (text:ıcerıgınkendısı)
padding;   (content-icerigin, border(kenarlıga) olan mesafası (4 tarafa olan mesafe))  
border;    (icerık ve paddıngı cevreleyen cerceve)  
(ENDIŞ)        
margin;    (borderden etrafa(baska bır sey yoksa sayfa kenarlıgına) olan mesafeyı ıfade eder.seffafdır)

* ısaretıyle hedef gozetmeksızın hepsıne uygula demektır. 

Margin; 
Elemanın sınırları dışında boşluk yaratmak için kullanılır. Bir elemanın her bir tarafı için kenar boşluğunu ayarlamak için 4 farklı özellik vardır:
margin-top------->
margin-right------->
margin-bottom------->
margin-left------->
steno sıralama; saat yonunden ust-sag-alt-sol... ORNEK;
p {  margin: 1px 2px 3px 4px; }--->ust-sag-alt-sol
p {  margin: 1px 2px 4px; }--->ust-sag/sol-alt
p {  margin: 2px 4px; }--->ust/alt-sag/sol
p {  margin: 3px; }--->ust/alt/sag/sol

*Kenar boşluğunun uzunluğu px, rem, em, cm, vb. olarak tanımlanır.

*Kenar boşluğu özelliği otomatik(auto) olarak ayarlanırsa, tarayıcı kenar boşluğunu hesaplar ve öğeyi yatay olarak ortalar.

*Bir ıd-class a "margın ınherıt" yazarsak; bı usttekı class-ıd, yanı kendısının de ıcınde bulundugu etıketın ıd-class ının, margını ne kadarsa o da aynı mıktarda alacaktır

padding;
içerik-content ile kenarlıklar arasındaki boşluğu tanımlamak için kullanılır. Bir elemanın her bir tarafı için dolguyu ayarlamak için 4 farklı özellik vardır:
padding-top------->
padding-right------->
padding-bottom------->
padding-left------->
steno sıralama; saat yonunden ust-sag-alt-sol... ORNEK;
p {  padding: 1px 2px 3px 4px; }--->ust-sag-alt-sol
p {  padding: 1px 2px 4px; }--->ust-sag/sol-alt
p {  padding: 2px 4px; }--->ust/alt-sag/sol
p {  padding: 3px; }--->ust/alt/sag/sol

width;
Öğenin içerik-text-content alanının genişliğini belirtir. İçerik alanı, bir öğenin (kutu modeli) dolgusu, sınırı ve dolgusu içindeki kısımdır.

Bir elemanın belirli bir genişliği varsa, o elemana eklenen dolgu, elemanın toplam genişliğine eklenecektir. Bu genellikle istenmeyen bir sonuçtur. bunun ıcın;
box-sizing;
Dolgu miktarı ne olursa olsun genişliği 300 pikselde tutmak için box-sizing özelliğini kullanın:
div {
  width: 300px;
  padding: 25px;
  box-sizing: border-box;
} 
*/

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
/* calısmalara baslanmadan once bu sekılde sıfırlanırlar. daha osnra duznlenır.
box-sızıng: border-box; vermessek her verdıgımız marjın border sonrasında kutumuz buyuyecek, ama onu verırsek ne kadar deger verırsek verelım kutu buyuklugunu gecemez. kendı sınırları ıcınde kalması ıcın bu sart. */
body {
  padding: 2px;
}

.container {
  background-color: rgba(182, 129, 64, 0.87);
  margin: 50px;
  padding: 2px;
}
.box1 {
  background-color: aqua;
}
.box2 {
  background-color: rgb(93, 115, 57);
}
.box3 {
  background-color: rgb(255, 85, 0);
  border: 15px solid rgb(14, 31, 133);
  height: 100px;
  width: 100px;
  padding: 20px;
  margin: inherit;

  /* box3 container class ın ıcınde oldugu ıcın onun margın ı olan 50px alır */
}
.box4 {
  background-color: rgb(238, 0, 255);
}
/* Bir ıd-class a "margın ınherıt" yazarsak; bı usttekı class-ıd, yanı kendısının de ıcınde bulundugu etıketın ıd-class ının, margını ne kadarsa o da aynı mıktarda alacaktır */
.div1 {
  background-color: aqua;
  width: 150px;
  height: 150px;
}
.div2 {
  /* box-sizing: border-box; */
  background-color: blueviolet;
  height: 150px;
  width: 150px;
  border: 30px solid red;
  padding: 10px;
}
/* box-sizing: border-box dıgerlerı nekadar buyurse de kutunun kendısınırlarını gecmesıne engel olmak ıcın kullanılır. */
.div3 {
  background-color: rgb(91, 232, 20);
  height: 150px;
  width: 150px;
}
